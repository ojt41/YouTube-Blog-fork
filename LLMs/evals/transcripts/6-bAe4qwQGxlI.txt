I built a web app to translate YouTube videos into blog posts the crazy thing is before building this I had absolutely no web development experience yet I was still able to build and deploy this project in Just 4 days so how did I do that in this video I'm going to share my full process for building this app and all the tools I used to go from idea to deployment and if you're new here welcome I'm Shaw I make videos about D data science and Entrepreneurship and if you enjoy this content please consider clicking the Subscribe button that's a great no cost way you can support me in all the videos that I make for a bit of context my background is in data science which is basically all about using data and machine learning to solve problems while this means I've done a lot of programming coding to process data or train models is very different than building consumer software this is a common struggle for most data scientists who might be very comfortable with python but never learn how to ship SAS products with my savings on track to hit $0 this quarter I was determined not to be one of these data scientists after spending too much time on Indie hacker Twitter I figured the best way to learn this skill set was by doing it that's why this quarter my goal is to ship one product every single month until until something makes money my first such product is a tool for converting YouTube videos into blog posts it took me just 4 days to build and deploy the initial prototype for this app and here I'm going to share exactly how I did it the first day I was starting from scratch I had my goal of shipping a product in less than a month but hadn't settled on an idea my approach to picking product ideas came from advice I got from Steven Wolfram who said the product time building is a product that I want my interpretation of this advice is to solve your own problems this led me to three product ideas a YouTube thumbnail generator a YouTube clip finder and a YouTube video to blog converter after doing some basic research and playing around with chat GPT I settled on this last idea because I felt it was the one I could implement the fastest I had also seen a job post on upwork paying a few hundred to do exactly this with an idea settled my next step wasn't to start coding instead I started designing the website and user interface for me starting with the design was actually a necessity because I had no idea how to code the thing my approach to doing the design was to First create a brand blueprint in other words creating a color palette picking fonts and designing a logo for the product for the color palette I used a website called cooler to quickly find colors I liked then brought everything together in canva having this brand blueprint made it pretty easy to design a simple UI at the end of day one I had something that looked like this on day two the goal was to implement the front end based on my canva design since my goal was to ship the product by the end of the month I didn't have time to learn HTML and a front-end framework the fastest way forward would be to use the language I'm most com able with python lucky for me a few months ago a python library was released to do exactly this the library is called Fast HTML which allows developers to build modern web apps in Python I spent the morning learning fast HTML by watching a lecture from the creators and reading through their documentation then in the afternoon I started coding the front end based on my canva design my first step was to take a screenshot of the design and pasted into cursor to get me started even though fast HTML is a new library that Claude and GPT haven't been trained on I uploaded this text file from Fast html's GitHub repository to give cursor more context which actually worked surprisingly well this experience sold me on using cursor and AI assistance for coding I'd also use chat GPT from time to time for tasks such as writing CSS styling this workflow of trying AI chat in cursor with Claude first then going to chat GPT if needed became my standard approach by the end of the day I had a site that looked very similar to my initial design by day three I had coded my website but it didn't do anything The Next Step was to implement the backend I started by asking chat GPT to write me a prompt for creating blog posts based on YouTube video transcripts I tinkered with this prompt in chat GPT a bit and experimented manually with different videos when I had something that looked good I implemented the whole process in Python the two key libraries I used here were the YouTube transcript API and open ai's python API since I've used these libraries for past projects I was able to repurpose most of the code from these examples that was the extent of the AI I used for this initial version I could have done something more sophisticated like allowing users to upload PDFs or fine-tuning a model on my own YouTube videos and blog posts but that would a taken time I don't have right now if this product is something that people actually want then I'll go back and make these improvements the rest of the backend implementation was just making the website work via basic web development which I was all learning on the Fly by day four I had a working prototype of the app running locally on my machine but you can't really sell a product that only runs on your computer the goal of day four was to deploy my app to the internet to avoid abuse from spammers and Bots I set up Google oo this is basically that signin with Google option that you see on websites these days the benefits of requiring people to sign in with Google are one I don't have to manage sensitive information like user passwords and two I don't need to worry about verifying that the users are human while setting up ooth sounds simple enough it took me most of the morning to get this working after that I bought a custom domain for the app I paid $70 for the domain yb. from Squarespace and then finally I deployed the app on Railway this was the fastest option because there was example code for deploying a fast HTML app to railway in their documentation after a handful of failed deployments and switching my domain provider to Cloud flx I was finally up and running here's a demo of me using that early version of the app I used it to create a blog post for a podcast that I hosted last year typically it takes me at least an hour to write a first draft for a blog like this however using this tool I was able to do that in just 5 minutes and then after just one day of this blog being monetized on medium I've made $112 from it which is already some real value for me personally in just four days I went from idea to production this is the world now thanks to python libraries like Fast HTML coding tools like cursor and deployment services like Railway developers can Implement ideas faster and validate them in public while this project would have taken me weeks without these tools it was still a prototype so it had limitations such as ooth users had to be manually defined in the Google Cloud console there wasn't a database hooked up to the app so users could use it without any limits and most importantly there was no stripe integration so no way of making any money from it it took me another 8 days to make an MVP version for which any Google user could sign in usage metrics were stored in a SQL light database stripe integration was set up and created a landing page that included a demo for people who hadn't signed up yet you can try out the latest version of the app completely for free using the link in the description below although shipping an app in one month may have sounded crazy a few years ago this is becoming normal based on my experience with this first product here are three key tips for those trying to do something similar first build with what you know if I had to learn JavaScript or react before even starting this project I'd still probably be watching YouTube tutorials Second Use AI tools coding assistants like cursor and stbt have become the norm in programming if you aren't using them you're probably moving two times slower than you would otherwise third and finally it's not just about building I know this video focused on the development side of the product but what are just as important if not more are the idea that you build and how you Market it for ideas I'd take wolfram's advice and solve your own problems this allows you to move faster and increases the likelihood of validation because you are your own customer for marketing that's still something I'm trying to figure out but when I find something that works I'll be sure to share it here if you have any questions about my process or any of the tech I used please let me know in the comments and as always thank you so much for your time and thanks for watching